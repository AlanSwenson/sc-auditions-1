"use strict";function Ctrl($scope){$scope.phoneNumber=4085265552}var ApplicationConfiguration=function(){var applicationModuleName="studio-center-auditions",applicationModuleVendorDependencies=["ngResource","ngCookies","ngAnimate","ngTouch","ngSanitize","ui.router","ui.bootstrap","ui.utils","angularFileUpload","ngAudio","ui.bootstrap.datetimepicker","rt.encodeuri","angularMoment","textAngular","btford.socket-io"],registerModule=function(moduleName,dependencies){angular.module(moduleName,dependencies||[]),angular.module(applicationModuleName).requires.push(moduleName)};return{applicationModuleName:applicationModuleName,applicationModuleVendorDependencies:applicationModuleVendorDependencies,registerModule:registerModule}}();angular.module(ApplicationConfiguration.applicationModuleName,ApplicationConfiguration.applicationModuleVendorDependencies),angular.module(ApplicationConfiguration.applicationModuleName).config(["$locationProvider",function($locationProvider){$locationProvider.hashPrefix("!")}]),angular.element(document).ready(function(){"#_=_"===window.location.hash&&(window.location.hash="#!"),angular.bootstrap(document,[ApplicationConfiguration.applicationModuleName])}),ApplicationConfiguration.registerModule("core"),angular.module("core").constant("angularMomentConfig",{timezone:"America/New_York"}),moment.tz.setDefault("America/New_York"),ApplicationConfiguration.registerModule("projects"),ApplicationConfiguration.registerModule("reports"),ApplicationConfiguration.registerModule("talents"),ApplicationConfiguration.registerModule("tools"),ApplicationConfiguration.registerModule("typecasts"),ApplicationConfiguration.registerModule("users"),angular.module("core").config(["$stateProvider","$urlRouterProvider",function($stateProvider,$urlRouterProvider){$urlRouterProvider.otherwise("/"),$stateProvider.state("home",{url:"/",templateUrl:"modules/core/views/home.client.view.html"})}]),angular.module("core").controller("HeaderController",["$scope","Authentication","Menus",function($scope,Authentication,Menus){$scope.authentication=Authentication,$scope.isCollapsed=!1,$scope.menu=Menus.getMenu("topbar"),$scope.toggleCollapsibleMenu=function(){$scope.isCollapsed=!$scope.isCollapsed},$scope.$on("$stateChangeSuccess",function(){$scope.isCollapsed=!1})}]),angular.module("core").controller("HomeController",["$scope","Authentication",function($scope,Authentication){$scope.authentication=Authentication}]),angular.module("core").filter("multiTerm",["$filter",function($filter){return function(inputArray,searchText){for(var wordArray=searchText?searchText.toLowerCase().split(/\s+/):[],wordCount=wordArray.length,i=0;wordCount>i;i++)inputArray=$filter("filter")(inputArray,wordArray[i],!0),console.log(wordArray[i]);return inputArray}}]),angular.module("core").filter("startFrom",function(){return function(input,start){return input&&input.length?(start=+start,input.slice(start)):void 0}}),angular.module("core").service("Menus",[function(){this.defaultRoles=["*"],this.menus={};var shouldRender=function(user){if(!user)return this.isPublic;if(~this.roles.indexOf("*"))return!0;for(var userRoleIndex in user.roles)for(var roleIndex in this.roles)if(this.roles[roleIndex]===user.roles[userRoleIndex])return!0;return!1};this.validateMenuExistance=function(menuId){if(menuId&&menuId.length){if(this.menus[menuId])return!0;throw new Error("Menu does not exists")}throw new Error("MenuId was not provided")},this.getMenu=function(menuId){return this.validateMenuExistance(menuId),this.menus[menuId]},this.addMenu=function(menuId,isPublic,roles){return this.menus[menuId]={isPublic:isPublic||!1,roles:roles||this.defaultRoles,items:[],shouldRender:shouldRender},this.menus[menuId]},this.removeMenu=function(menuId){this.validateMenuExistance(menuId),delete this.menus[menuId]},this.addMenuItem=function(menuId,menuItemTitle,menuItemURL,menuItemType,menuItemUIRoute,isPublic,roles,position){return this.validateMenuExistance(menuId),this.menus[menuId].items.push({title:menuItemTitle,link:menuItemURL,menuItemType:menuItemType||"item",menuItemClass:menuItemType,uiRoute:menuItemUIRoute||"/"+menuItemURL,isPublic:null===isPublic||"undefined"==typeof isPublic?this.menus[menuId].isPublic:isPublic,roles:null===roles||"undefined"==typeof roles?this.menus[menuId].roles:roles,position:position||0,items:[],shouldRender:shouldRender}),this.menus[menuId]},this.addSubMenuItem=function(menuId,rootMenuItemURL,menuItemTitle,menuItemURL,menuItemUIRoute,isPublic,roles,position){this.validateMenuExistance(menuId);for(var itemIndex in this.menus[menuId].items)this.menus[menuId].items[itemIndex].link===rootMenuItemURL&&this.menus[menuId].items[itemIndex].items.push({title:menuItemTitle,link:menuItemURL,uiRoute:menuItemUIRoute||"/"+menuItemURL,isPublic:null===isPublic||"undefined"==typeof isPublic?this.menus[menuId].items[itemIndex].isPublic:isPublic,roles:null===roles||"undefined"==typeof roles?this.menus[menuId].items[itemIndex].roles:roles,position:position||0,shouldRender:shouldRender});return this.menus[menuId]},this.removeMenuItem=function(menuId,menuItemURL){this.validateMenuExistance(menuId);for(var itemIndex in this.menus[menuId].items)this.menus[menuId].items[itemIndex].link===menuItemURL&&this.menus[menuId].items.splice(itemIndex,1);return this.menus[menuId]},this.removeSubMenuItem=function(menuId,submenuItemURL){this.validateMenuExistance(menuId);for(var itemIndex in this.menus[menuId].items)for(var subitemIndex in this.menus[menuId].items[itemIndex].items)this.menus[menuId].items[itemIndex].items[subitemIndex].link===submenuItemURL&&this.menus[menuId].items[itemIndex].items.splice(subitemIndex,1);return this.menus[menuId]},this.addMenu("topbar")}]),angular.module("core").factory("Socket",["socketFactory",function(socketFactory){return socketFactory({prefix:"",ioSocket:io.connect(location.host)})}]),angular.module("projects").run(["Menus","Authentication",function(Menus,Authentication){Menus.addMenuItem("topbar","Projects","projects","dropdown","/projects(/create)?",!1),Menus.addSubMenuItem("topbar","projects","Client Portal","projects-client",!1),Menus.addSubMenuItem("topbar","projects","List Projects","projects",!1,!1,["admin","producer/auditions director","production coordinator","talent director"]),Menus.addSubMenuItem("topbar","projects","New Project","projects/create",!1,!1,["admin","producer/auditions director","production coordinator"]),Menus.addSubMenuItem("topbar","projects","Start A New Audition Project","projects/new-audition-form",!1,!1,["client"])}]),angular.module("projects").config(["$stateProvider","$urlRouterProvider",function($stateProvider,$urlRouterProvider){$stateProvider.state("listProjects",{url:"/projects",templateUrl:"modules/projects/views/list-projects.client.view.html"}).state("clientListProjects",{url:"/projects-client",templateUrl:"modules/projects/views/client-list-projects.client.view.html"}).state("clientListProjectsSingle",{url:"/projects-client/:projectId",templateUrl:"modules/projects/views/client-list-projects.client.view.html"}).state("createProject",{"abstract":!0,url:"/projects/create",controller:"ProjectsController",templateUrl:"modules/projects/views/create-project.client.view.html"}).state("createProject.project",{url:"",parent:"createProject",templateUrl:"modules/projects/views/create-project/project.client.view.html"}).state("createProject.talent",{url:"/talent",parent:"createProject",templateUrl:"modules/projects/views/create-project/talent.client.view.html"}).state("newAuditionProject",{url:"/projects/new-audition-form",templateUrl:"modules/projects/views/new-audition-project.client.view.html"}).state("newAuditionProjectThanks",{url:"/projects/new-audition-form/thanks",templateUrl:"modules/projects/views/new-audition-project-thanks.client.view.html"}).state("viewProject",{url:"/projects/:projectId",templateUrl:"modules/projects/views/view-project.client.view.html"}).state("editProject",{url:"/projects/:projectId/edit",templateUrl:"modules/projects/views/edit-project.client.view.html"})}]),angular.module("projects").controller("ProjectsModalController",["$scope","$stateParams","$location","Authentication","Projects","$upload","ngAudio","$http","$modalInstance","data","$rootScope",function($scope,$stateParams,$location,Authentication,Projects,$upload,ngAudio,$http,$modalInstance,data,$rootScope){$scope.authentication=Authentication,$scope.data=data,$scope.selectedAuds=[],$scope.audio="",$scope.lastAudioID=0,$scope.audioStatus=0,$scope.findOneById=function(id){$scope.selectedAuditions=[],$scope.hideList=[],$stateParams.projectId=id,$scope.findOne()},$scope.findOne=function(){$scope.project=Projects.get({projectId:$stateParams.projectId})},$scope.$watch("data",function(val){"undefined"!=typeof $scope.data&&$scope.findOneById($scope.data.project)}),$scope.$watch("project",function(val){$scope.$watch("project.auditions",function(val){if("undefined"!=typeof $scope.project.auditions)for(var i=0;i<$scope.project.auditions.length;++i)for(var j=0;j<$scope.data.auditions.length;++j)$scope.data.auditions[j]===$scope.project.auditions[i].file.path&&$scope.selectedAuds.push($scope.project.auditions[i])})}),$scope.cancel=function(){$modalInstance.dismiss("cancel")},$scope.verifyAudio=function(key){return"object"==typeof $scope.project.auditions[key]&&"object"==typeof $scope.project.auditions[key].file?!0:!1},$scope.playAudio=function(key,filename){if("object"==typeof $scope.audio&&key===$scope.lastAudioID&&1===$scope.audioStatus)return $scope.audio.pause(),void($scope.audioStatus=0);if("object"==typeof $scope.audio&&key===$scope.lastAudioID&&0===$scope.audioStatus)return $scope.audio.play(),void($scope.audioStatus=1);if("object"==typeof $scope.audio&&key===$scope.lastAudioID&&2===$scope.audioStatus)return $scope.audio.play(),void($scope.audioStatus=1);var fileName="/res/auditions/"+$scope.project._id+"/"+filename;$scope.audio=ngAudio.load(fileName),$scope.audio.unbind(),$scope.audioStatus=1,$scope.audio.play(),$scope.lastAudioID=key},$scope.bookSelected=function(){$http.post("/projects/bookAuditions",{data:$scope.data}).success(function(data,status,headers,config){$rootScope.$broadcast("refreshProject",$scope.data.project),$modalInstance.close()})}}]),angular.module("projects").controller("ProjectsController",["$scope","$stateParams","$location","Authentication","Projects","$upload","ngAudio","$http","$modal","$rootScope","Socket",function($scope,$stateParams,$location,Authentication,Projects,$upload,ngAudio,$http,$modal,$rootScope,Socket){$scope.authentication=Authentication,$scope.max=5,$scope.isReadonly=!1,$scope.ratings=[],$scope.ratingsAvg=[],$scope.projProgress=[],$scope.selCheckVal=0,$scope.client=[],$scope.talent=[],$scope.showRename=0,$scope.statusOpts=["In Progress","On Hold","Booked","Canceled","ReAuditioned","Dead","Closed - Pending Client Decision","Complete"],$scope.priorityOpts=["None","Very low","Low","Medium","High","Very high"],$scope.phaseStatusOpts=["in progress","open","complete","suspended"],$scope.soundersOpts=["Sounders","No Sounders - Approved By William"],$scope.talentStatus=["Cast","Emailed","Scheduled","Message left","Out","Received needs to be posted","Posted","Not Posted (Bad Read)"],$scope.loadAudio=0,$scope.audio="",$scope.lastAudioID=0,$scope.audioStatus=0,$scope.newLead={},$scope.referenceFiles=[],$scope.scripts=[],$scope.newProject={notifyClient:!0},$scope.parts=[],$scope.toggleRefs=!1,$scope.selectedMainClients=[],$scope.rejFiles=[],$scope.selectedAuditions=[],$scope.hideList=[],$scope.Math=window.Math,$scope.currentPage=0,$scope.range=function(min,max,step){step=step||1;for(var input=[],i=min;max>=i;i+=step)input.push(i);return input},$scope.setPage=function(){$scope.currentPage=this.n},$scope.hoveringOver=function(value,key,object){$scope.overStar=value,$scope.percent=100*(value/$scope.max),$scope.selCheckVal=value},$scope.bookSelectedAuditions=function(){var modalInstance=$modal.open({animation:!0,templateUrl:"modules/projects/views/book-auditon-modal.client.view.html",controller:"ProjectsModalController",resolve:{data:function(){return{project:$scope.project._id,auditions:$scope.selectedAuditions}}}});modalInstance.result.then(function(selectedItem){},function(){})},$scope.createClient=function(owner){$modal.open({animation:!0,templateUrl:"modules/users/views/modal-create.client.view.html",controller:"UsersModalController",resolve:{owner:function(){return"client"===owner?"client":"client-client"}}})},$scope.createTalent=function(){var modalInstance=$modal.open({animation:!0,templateUrl:"modules/talents/views/create-talent-modal.client.view.html",controller:"TalentsModalController"});modalInstance.result.then(function(selectedItem){},function(){})},$scope.selAudition=function(key){var idx=$scope.selectedAuditions.indexOf(key);idx>-1?$scope.selectedAuditions.splice(idx,1):$scope.selectedAuditions.push(key)},$scope.selCheck=function(filename){for(var i=0;i<$scope.selectedAuditions.length;++i)if($scope.selectedAuditions[i]===filename)return!0},$scope.hideSelected=!0,$scope.hideSelectedAuditions=function(){$scope.hideSelected=!$scope.hideSelected},$scope.hideAudition=function(filename){$scope.hideList.push(filename)},$scope.showAudition=function(filename){var idx=$scope.hideList.indexOf(filename);idx>-1&&$scope.hideList.splice(idx,1)},$scope.isHidden=function(filename){for(var i=0;i<$scope.hideList.length;++i)if($scope.hideList[i]===filename)return!1;return!0},$scope.isDisplayed=function(filename){if($scope.hideSelected===!0)for(var i=0;i<$scope.hideList.length;++i)if($scope.hideList[i]===filename)return!1;return!0},$scope.downloadAllAuditions=function(){$http.post("/projects/downloadallauditions",{project:$scope.project}).success(function(data,status,headers,config){setTimeout(function(){var link=document.createElement("a");link.download=encodeURIComponent(data.zip),link.href="res/archives/"+encodeURIComponent(data.zip),link.click()},1e3)})},$scope.bookSelectedShow=function(){for(var idx,hiddenMatchCnt=0,i=0;i<$scope.hideList.length;++i)idx=$scope.selectedAuditions.indexOf($scope.hideList[i]),idx>-1&&++hiddenMatchCnt;return $scope.selectedAuditions.length>hiddenMatchCnt?!0:void 0},$scope.compareDates=function(projDate){var now=new Date;projDate=new Date(projDate);var hours=Math.abs(projDate-now)/36e5;return 1>hours?!0:void 0},$scope.checkPassed=function(projDate){var now=new Date;return projDate=new Date(projDate),now>projDate?!0:void 0},$scope.showPartFld=function(id){if("undefined"!=typeof $scope.project.talent)for(var i=0;i<$scope.project.talent.length;++i)if($scope.project.talent[i].talentId===String(id)&&($scope.project.talent[i].requested===!0||$scope.project.talent[i].regular===!0))return!1;return!0},$scope.showPartString=function(id){for(var i=0;i<$scope.project.talent.length;++i)if($scope.project.talent[i].talentId===String(id)&&"undefined"!=typeof $scope.project.talent[i].part&&""!==$scope.project.talent[i].part)return $scope.project.talent[i].part},$scope.showCreatePartFld=function(id){for(var i=0;i<$scope.talent.length;++i)if($scope.talent[i].talentId===String(id)&&($scope.talent[i].requested===!0||$scope.talent[i].regular===!0))return!1;return!0},$scope.permitAdmin=function(){for(var allowRoles=["admin"],i=0;i<Authentication.user.roles.length;++i)for(var j=0;j<allowRoles.length;++j)if(Authentication.user.roles[i]===allowRoles[j])return!0},$scope.permitAdminDirector=function(){for(var allowRoles=["admin","producer/auditions director"],i=0;i<Authentication.user.roles.length;++i)for(var j=0;j<allowRoles.length;++j)if(Authentication.user.roles[i]===allowRoles[j])return!0},$scope.permitProducers=function(){for(var allowRoles=["producer/auditions director"],i=0;i<Authentication.user.roles.length;++i)for(var j=0;j<allowRoles.length;++j)if(Authentication.user.roles[i]===allowRoles[j])return!0},$scope.permitAdminTalentDirectorProdCoord=function(){for(var allowRoles=["admin","talent director","production coordinator"],i=0;i<Authentication.user.roles.length;++i)for(var j=0;j<allowRoles.length;++j)if(Authentication.user.roles[i]===allowRoles[j])return!0},$scope.permitEveryOneButClients=function(){for(var allowRoles=["admin","producer/auditions director","production coordinator","talent director"],i=0;i<Authentication.user.roles.length;++i)for(var j=0;j<allowRoles.length;++j)if(Authentication.user.roles[i]===allowRoles[j])return!0},$scope.permitClient=function(){for(var allowRoles=["client"],i=0;i<Authentication.user.roles.length;++i)for(var j=0;j<allowRoles.length;++j)if(Authentication.user.roles[i]===allowRoles[j])return!0},$scope.permitClientClient=function(){for(var allowRoles=["client-client"],i=0;i<Authentication.user.roles.length;++i)for(var j=0;j<allowRoles.length;++j)if(Authentication.user.roles[i]===allowRoles[j])return!0},$scope.userCheck=function(){"admin"!==Authentication.user.roles[0]&&"producer/auditions director"!==Authentication.user.roles[0]&&"production coordinator"!==Authentication.user.roles[0]&&$location.path("/projects")},$scope.sendTalentEmail=function(talent){$http.post("/projects/sendtalentemail",{talent:talent,project:$scope.project}).success(function(data,status,headers,config){alert("Selected talent has been emailed."),$scope.project=data})},$scope.sendClientEmail=function(type){$http.post("/projects/sendclientemail",{type:type,project:$scope.project,clients:$scope.selectedMainClients}).success(function(data,status,headers,config){alert("Clients Emailed "+type+" Email "),$scope.selectedMainClients=[];var note,now=moment(new Date).format(),item={date:now,userid:"",username:"System",item:"",deleted:!1};switch(type){case"opening":note="Client Notified of Project Start by "+Authentication.user.displayName;break;case"carryover":note="Client sent Carryover by "+Authentication.user.displayName;break;case"closing":note="Client Notified of Project Completion by "+Authentication.user.displayName}item.item=note,$scope.project.discussion.push(item),$scope.update()}).error(function(data,status,headers,config){alert("An error occured while sending client emails. Please contact your administrator.")})},$scope.lead=function(){$scope.submitted=!0,$http.post("/projects/lead",{firstName:$scope.newLead.firstName,lastName:$scope.newLead.lastName,company:$scope.newLead.company,phone:$scope.newLead.phone,email:$scope.newLead.email,describe:$scope.newLead.describe}).success(function(data,status,headers,config){$location.path("/projects/new-audition-form/thanks")})},$scope.leadFormPop=function(){"object"==typeof Authentication.user&&($scope.newLead.firstName=Authentication.user.firstName,$scope.newLead.lastName=Authentication.user.lastName,$scope.newLead.company=Authentication.user.company,$scope.newLead.phone=Authentication.user.phone,$scope.newLead.email=Authentication.user.email)},$scope.gatherToAddresses=function(type){var emailObj={email:{projectId:$scope.project._id,to:[],bcc:[],subject:"",message:""}};angular.extend($scope,emailObj);var toEmails=[],emailCnt=0,re=/^(([^<>()[\]\\.,;:\s@\"]+(\.[^<>()[\]\\.,;:\s@\"]+)*)|(\".+\"))@((\[[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\])|(([a-zA-Z\-0-9]+\.)+[a-zA-Z]{2,}))$/;if(toEmails[emailCnt]=Authentication.user.email,"updateTalent"!==type&&"updateTeam"!==type&&"updateClientClient"!==type&&"updateClient"!==type&&"saveAudtionNote"!==type&&"saveScriptNote"!==type&&"saveDiscussion"!==type&&"updateStatus"!==type)for(var l=0;l<$scope.project.talent.length;++l)""!==$scope.project.talent[l].email&&re.test($scope.project.talent[l].email)&&(emailCnt+=1,toEmails[emailCnt]=$scope.project.talent[l].email);for(var k=0;k<$scope.project.team.length;++k)""!==$scope.project.team[k].email&&re.test($scope.project.team[k].email)&&(emailCnt+=1,toEmails[emailCnt]=$scope.project.team[k].email);$scope.email.to=toEmails},$scope.checkClientClientUsers=function(userId){if("object"==typeof $scope.project&&"object"==typeof $scope.project.clientClient)for(var i=0;i<$scope.project.clientClient.length;++i)if($scope.project.clientClient[i].userId===userId)return!0},$scope.checkClientUsers=function(userId){if("object"==typeof $scope.project&&"object"==typeof $scope.project.client)for(var i=0;i<$scope.project.client.length;++i)if($scope.project.client[i].userId===userId)return!0},$scope.checkClientUsersCreate=function(userId){for(var i=0;i<$scope.client.length;++i)if($scope.client[i].userId===userId)return!0},$scope.checkTeam=function(userId){if("object"==typeof $scope.project&&"object"==typeof $scope.project.team)for(var i=0;i<$scope.project.team.length;++i)if($scope.project.team[i].userId===userId)return!0},$scope.checkTalent=function(talentId){if("object"==typeof $scope.project&&"object"==typeof $scope.project.talent)for(var i=0;i<$scope.project.talent.length;++i)if($scope.project.talent[i].talentId===talentId&&$scope.project.talent[i].regular===!0)return!0},$scope.checkRequestedTalent=function(talentId){if("object"==typeof $scope.project&&"object"==typeof $scope.project.talent)for(var i=0;i<$scope.project.talent.length;++i)if($scope.project.talent[i].talentId===talentId&&$scope.project.talent[i].requested===!0)return!0},$scope.checkCreateTalent=function(talentId){for(var i=0;i<$scope.talent.length;++i)if($scope.talent[i].talentId===talentId&&$scope.talent[i].regular===!0)return!0},$scope.checkRequestedCreateTalent=function(talentId){for(var i=0;i<$scope.talent.length;++i)if($scope.talent[i].talentId===talentId&&$scope.talent[i].requested===!0)return!0},$scope.updateTalent=function(talentId,talentName,email){for(var talent={talentId:talentId,name:talentName,email:email,booked:!1,status:"Cast",part:$scope.parts[talentId]||"",regular:!0,requested:!1},found=0,i=0;i<$scope.project.talent.length;++i)$scope.project.talent[i].talentId===talentId&&($scope.project.talent[i].requested===!0&&($scope.project.talent[i].requested=!1),$scope.project.talent[i].regular===!0?$scope.project.talent[i].regular=!1:$scope.project.talent[i].regular=!0,$scope.project.talent[i].regular===!1&&$scope.project.talent[i].requested===!1&&$scope.project.talent.splice(i,1),found=1);0===found&&$scope.project.talent.push(talent),$scope.update()},$scope.updateRequestTalent=function(talentId,talentName,email){for(var talent={talentId:talentId,name:talentName,email:email,booked:!1,status:"Cast",part:$scope.parts[talentId]||"",regular:!1,requested:!0},found=0,i=0;i<$scope.project.talent.length;++i)$scope.project.talent[i].talentId===talentId&&($scope.project.talent[i].regular===!0&&($scope.project.talent[i].regular=!1),$scope.project.talent[i].requested===!0?$scope.project.talent[i].requested=!1:$scope.project.talent[i].requested=!0,$scope.project.talent[i].regular===!1&&$scope.project.talent[i].requested===!1&&$scope.project.talent.splice(i,1),found=1);0===found&&$scope.project.talent.push(talent),$scope.update()},$scope.updateCreateTalent=function(talentId,talentName,email){for(var talent={talentId:talentId,name:talentName,email:email,booked:!1,status:"Cast",part:$scope.parts[talentId]||"",regular:!0,requested:!1},found=0,i=0;i<$scope.talent.length;++i)$scope.talent[i].talentId===talentId&&($scope.talent[i].requested===!0&&($scope.talent[i].requested=!1),$scope.talent[i].regular===!0?$scope.talent[i].regular=!1:$scope.talent[i].regular=!0,$scope.talent[i].regular===!1&&$scope.talent[i].requested===!1&&$scope.talent.splice(i,1),found=1);0===found&&$scope.talent.push(talent)},$scope.updateRequestCreateTalent=function(talentId,talentName,email){for(var talent={talentId:talentId,name:talentName,email:email,booked:!1,status:"Cast",part:$scope.parts[talentId]||"",regular:!1,requested:!0},found=0,i=0;i<$scope.talent.length;++i)$scope.talent[i].talentId===talentId&&($scope.talent[i].regular===!0&&($scope.talent[i].regular=!1),$scope.talent[i].requested===!0?$scope.talent[i].requested=!1:$scope.talent[i].requested=!0,$scope.talent[i].regular===!1&&$scope.talent[i].requested===!1&&$scope.talent.splice(i,1),found=1);0===found&&$scope.talent.push(talent)},$scope.updateTalentStatus=function(key){$scope.update()},$scope.updateTeam=function(userId,displayName,email){for(var user={userId:userId,name:displayName,email:email},found=0,i=0;i<$scope.project.team.length;++i)$scope.project.team[i].userId===userId&&($scope.project.team.splice(i,1),found=1);0===found&&$scope.project.team.push(user),$scope.update()},$scope.updateClientClient=function(userId,displayName,email){for(var user={userId:userId,name:displayName,email:email},found=0,i=0;i<$scope.project.clientClient.length;++i)$scope.project.clientClient[i].userId===userId&&($scope.project.clientClient.splice(i,1),found=1);0===found&&$scope.project.clientClient.push(user),$scope.update()},$scope.updateClient=function(userId,displayName,email){for(var user={userId:userId,name:displayName,email:email},found=0,i=0;i<$scope.project.client.length;++i)$scope.project.client[i].userId===userId&&($scope.project.client.splice(i,1),found=1);0===found&&$scope.project.client.push(user),$scope.update()},$scope.updateCreateClient=function(userId,displayName,email){for(var user={userId:userId,name:displayName,email:email},found=0,i=0;i<$scope.client.length;++i)$scope.client[i].userId===userId&&($scope.client.splice(i,1),found=1);0===found&&$scope.client.push(user)},$scope.toggleBooked=function(key){$scope.project.talent[key].booked=!$scope.project.talent[key].booked,$scope.update()},$scope.saveAudtionNote=function(key){var now=new Date,item={date:now.toJSON(),userid:Authentication.user._id,username:Authentication.user.displayName,item:this.auditions[key].discussion};$scope.project.auditions[key].discussion.push(item),$scope.update()},$scope.scrApprov=function(key){var now=new Date;$scope.project.scripts[key].approved.selected===!0?($scope.project.scripts[key].approved.selected=!1,$scope.project.scripts[key].approved.by.userId="",$scope.project.scripts[key].approved.by.name="",$scope.project.scripts[key].approved.by.date=""):($scope.project.scripts[key].approved.selected=!0,$scope.project.scripts[key].approved.by.userId=Authentication.user._id,$scope.project.scripts[key].approved.by.name=Authentication.user.fdisplayName,$scope.project.scripts[key].approved.by.date=now.toJSON()),$scope.update()},$scope.saveScriptNote=function(key){var now=new Date,item={date:now.toJSON(),userid:Authentication.user._id,username:Authentication.user.displayName,item:this.scripts[key].discussion};$scope.project.scripts[key].discussion.push(item),$scope.update()},$scope.create=function(){var project=new Projects({title:$scope.newProject.title,estimatedCompletionDate:$scope.newProject.estimatedCompletionDate,estimatedTime:$scope.newProject.estimatedTime,actualTime:$scope.newProject.actualTime,status:"In Progress",sounders:$scope.newProject.sounders,scripts:$scope.scripts,referenceFiles:$scope.referenceFiles,description:$scope.newProject.description,client:$scope.client,talent:$scope.talent,notifyClient:$scope.newProject.notifyClient});project.$save(function(response){$location.path("projects/"+response._id),$scope.name="",$scope.newProject=""},function(errorResponse){$scope.error=errorResponse.data.message})},$scope.remove=function(project){if(confirm("Are you sure?"))if(project){project.$remove();for(var i in $scope.projects)$scope.projects[i]===project&&$scope.projects.splice(i,1)}else $scope.project.$remove(function(){$location.path("projects")})},$scope.update=function(redirect){var project=$scope.project;redirect="undefined"==typeof redirect?!0:redirect,project.$update(function(){redirect===!0&&$location.path("projects/"+project._id)},function(errorResponse){$scope.error=errorResponse.data.message})},$scope.updateRating=function(path,redirect){redirect="undefined"==typeof redirect?!0:redirect;for(var key,ratingCnt=0,avgRating=0,j=0;j<$scope.project.auditions.length;++j)$scope.project.auditions[j].file.path===path&&(key=j);if("undefined"!=typeof $scope.project.auditions[key]&&"undefined"!=typeof $scope.project.auditions[key].rating){for(var i=0;i<$scope.project.auditions[key].rating.length;++i)$scope.project.auditions[key].rating[i].userId===Authentication.user._id?$scope.project.auditions[key].rating.splice(i,1):avgRating+=$scope.project.auditions[key].rating[i].value;ratingCnt+=$scope.project.auditions[key].rating.length}avgRating+=$scope.selCheckVal,avgRating/=ratingCnt+1;var rating={userId:Authentication.user._id,value:$scope.selCheckVal};$scope.project.auditions[key].rating.push(rating),$scope.project.auditions[key].avgRating=avgRating,$scope.update(redirect)},$scope.updateFavorite=function(path,redirect){redirect="undefined"==typeof redirect?!0:redirect;for(var key,favoriteVal=1,j=0;j<$scope.project.auditions.length;++j)$scope.project.auditions[j].file.path===path&&(key=j);"undefined"!=typeof $scope.project.auditions[key].favorite&&1===$scope.project.auditions[key].favorite&&(favoriteVal=0),$scope.project.auditions[key].favorite=favoriteVal,$scope.update(redirect)},$scope.updateStatus=function(key){if($scope.gatherToAddresses("updateStatus"),$scope.email.subject=$scope.project.title+" Phase "+$scope.project.phases[key].name[0].toUpperCase()+$scope.project.phases[key].name.slice(1)+" Status Update",$scope.email.message+="Project: "+$scope.project.title+"<br>",$scope.email.message+="Phase: "+$scope.project.phases[key].name[0].toUpperCase()+$scope.project.phases[key].name.slice(1)+"<br>",$scope.email.message+="Status: "+$scope.project.phases[key].status[0].toUpperCase()+$scope.project.phases[key].status.slice(1)+"<br>",$scope.email.message+="Start Date: "+$scope.project.phases[key].startDate+"<br>",$scope.email.message+="End Date: "+$scope.project.phases[key].endDate+"<br><br>",$scope.email.message+="Added by: "+Authentication.user.displayName+"<br>",$scope.email.message+="<br>For more information, please visit: "+$location.protocol()+"://"+$location.host()+(80!==$location.port()?":"+$location.port():"")+"/#!/projects/"+$scope.project._id+"<br>",$http.post("/projects/sendemail",{email:$scope.email}),"complete"===$scope.project.phases[key].status){var now=new Date;if($scope.project.phases[key].endDate=now.toJSON(),"Posting and Publishing"===$scope.project.phases[key].name){$scope.project.status="Closed - Pending Client Decision";for(var i=0;i<$scope.project.client.length;++i)$scope.selectedMainClients[i]=$scope.project.client[i].userId;$scope.sendClientEmail("closing")}}$scope.update()},$scope.updateProjectStatus=function(){$scope.gatherToAddresses("updateStatus"),$scope.email.subject=$scope.project.title+" Status Update",$scope.email.message+="Project: "+$scope.project.title+"<br>",$scope.email.message+="Status: "+$scope.project.status.toUpperCase()+$scope.project.status.slice(1)+"<br>",$scope.email.message+="Added by: "+Authentication.user.displayName+"<br>",$scope.email.message+="<br>For more information, please visit: "+$location.protocol()+"://"+$location.host()+(80!==$location.port()?":"+$location.port():"")+"/#!/projects/"+$scope.project._id+"<br>",$http.post("/projects/sendemail",{email:$scope.email}),$scope.update()},$scope.find=function(){$scope.projects=Projects.query()},Socket.on("projectsListUpdate",function(){$scope.find()}),$scope.findOneById=function(id){$scope.selectedAuditions=[],$scope.hideList=[],$stateParams.projectId=id,$scope.findOne()},Socket.on("projectUpdate",function(pojectData){String(pojectData.id)===String($scope.project._id)&&$scope.findOne()}),$scope.findOne=function(){$scope.project=Projects.get({projectId:$stateParams.projectId})},$rootScope.$on("refreshProject",function(event,args){$scope.findOneById(args)}),$scope.loadProject=function(){this.findOne(),$scope.loadAudio=0},$scope.$watch("newProject.estimatedCompletionDate",function(val){var now=new Date;$scope.newProject.estimatedCompletionDate<now?$scope.dateNotice="Date selected passed. Please select a future date and time!":$scope.dateNotice=""}),$scope.calcProjectProg=function(curProject){if("undefined"!=typeof curProject.phases){for(var phaseLngth=curProject.phases.length,complSteps=0,i=0;phaseLngth>i;++i)"complete"===curProject.phases[i].status&&complSteps++;var perc=Math.floor(100/phaseLngth*complSteps);
return perc}},$scope.$watch("project",function(val){"object"==typeof $scope.project&&($scope.$watch("project.referenceFiles",function(){"object"==typeof $scope.project.referenceFiles&&$scope.project.referenceFiles.length>0&&($scope.toggleRefs=!0)}),$scope.$watch("project.phases",function(val){if("undefined"!=typeof $scope.project.phases){for(var phaseLngth=$scope.project.phases.length,complSteps=0,i=0;phaseLngth>i;++i)"complete"===$scope.project.phases[i].status&&complSteps++;var perc=Math.floor(100/phaseLngth*complSteps);$scope.dynamic=perc}}))}),$scope.loadAudioPlayer=function(){if("undefined"!=typeof $scope.project.auditions){var loadCnt=$scope.project.auditions.length,curVal=0;$scope.project.auditions.length>1&&(loadCnt-=1),angular.forEach($scope.project.auditions,function(value,key){if(value&&"undefined"!=typeof value.file&&("audio/mp3"===value.file.type||"audio/mpeg"===value.file.type)){var fileName="/res/auditions/"+$scope.project._id+"/"+value.file.name;"object"==typeof $scope.audio[key]?$scope.audio[key].id!==fileName&&($scope.audio[key]=ngAudio.load(fileName),$scope.audio[key].unbind()):($scope.audio[key]=ngAudio.load(fileName),$scope.audio[key].unbind()),curVal=1===$scope.project.auditions.length?1:key,$scope.uploadfile="loading audio "+parseInt(100*curVal/loadCnt)+"%",$scope.uploadprogress=parseInt(100*curVal/loadCnt)}})}},$scope.verifyAudio=function(key){return"object"==typeof $scope.project.auditions[key]&&"object"==typeof $scope.project.auditions[key].file?!0:!1},$scope.stopAudio=function(){"object"==typeof $scope.audio&&($scope.audio.stop(),$scope.audioStatus=2)},$scope.playAudio=function(key,filename){if("object"==typeof $scope.audio&&key===$scope.lastAudioID&&1===$scope.audioStatus)return $scope.audio.pause(),void($scope.audioStatus=0);if("object"==typeof $scope.audio&&key===$scope.lastAudioID&&0===$scope.audioStatus)return $scope.audio.play(),void($scope.audioStatus=1);if("object"==typeof $scope.audio&&key===$scope.lastAudioID&&2===$scope.audioStatus)return $scope.audio.play(),void($scope.audioStatus=1);var fileName="/res/auditions/"+$scope.project._id+"/"+filename;$scope.audio=ngAudio.load(fileName),$scope.audio.unbind(),$scope.audioStatus=1,$scope.audio.play(),$scope.lastAudioID=key},$scope.saveDiscussion=function(){var now=new Date,item={date:now.toJSON(),userid:Authentication.user._id,username:Authentication.user.displayName,item:this.discussion,deleted:!1};$scope.project.discussion.push(item),$scope.gatherToAddresses("saveDiscussion"),$scope.email.subject=$scope.project.title+" discussion added",$scope.email.message="Discussion Item: "+this.discussion+"<br>",$scope.email.message+="Project: "+$scope.project.title+"<br>",$scope.email.message+="Added by: "+Authentication.user.displayName+"<br>",$scope.email.message+="<br>For more information, please visit: "+$location.protocol()+"://"+$location.host()+(80!==$location.port()?":"+$location.port():"")+"/#!/projects/"+$scope.project._id+"<br>",$scope.discussion="",$http.post("/projects/sendemail",{email:$scope.email}),$scope.update()},$scope.deleteDiscussion=function(key){var selVal=$scope.project.discussion.length-1-key;$scope.project.discussion[selVal].deleted=!0,$scope.update()},$scope.delScript=function(idx){if(confirm("Are you sure?")){var file="/res/scripts/"+$scope.project._id+"/"+$scope.project.scripts[idx].file.name;$http.put("/projects/deletefile",{fileLocation:file}),$scope.project.scripts.splice(idx,1),$scope.update()}},$scope.delTempScript=function(idx){var file="/res/scripts/temp/"+$scope.scripts[idx].file.name;$http.post("/projects/deletefile",{fileLocation:file}),$scope.scripts.splice(idx,1)},$scope.uploadScript=function($files){for(var i=0;i<$files.length;i++){var file=$files[i];performScriptUpload(file,i,$files)}};var performScriptUpload=function(file,i,$files){$scope.upload=$upload.upload({url:"projects/uploads/script",data:{project:$scope.project},file:file}).progress(function(evt){$scope.uploadStatus=i+" of "+$files.length+" files uploaded",$scope.uploadfile=evt.config.file.name,$scope.uploadprogress=parseInt(100*evt.loaded/evt.total)}).success(function(data,status,headers,config){$scope.project=angular.extend($scope.project,data)})};$scope.uploadTempScript=function($files){for(var i=0;i<$files.length;i++){var file=$files[i];performUploadTempScript(file,i,$files)}};var performUploadTempScript=function(file,i,$files){$scope.upload=$upload.upload({url:"projects/uploads/script/temp",data:{project:$scope.project},file:file}).progress(function(evt){$scope.uploadStatus=i+" of "+$files.length+" files uploaded",$scope.uploadfile=evt.config.file.name,$scope.uploadprogress=parseInt(100*evt.loaded/evt.total)}).success(function(data,status,headers,config){$scope.scripts.push(data[0])})};$scope.updatePublished=function(key){this.project.auditions[key].published===!1?$scope.project.auditions[key].published=!0:$scope.project.auditions[key].published=!1,$scope.update()},$scope.uploadReferenceFile=function($files){for(var i=0;i<$files.length;i++){var file=$files[i];performUploadReferenceFile(file,i,$files)}};var performUploadReferenceFile=function(file,i,$files){$scope.upload=$upload.upload({url:"projects/uploads/referenceFile",data:{project:$scope.project},file:file}).progress(function(evt){$scope.uploadStatus=i+" of "+$files.length+" files uploaded",$scope.uploadfile=evt.config.file.name,$scope.uploadprogress=parseInt(100*evt.loaded/evt.total)}).success(function(data,status,headers,config){$scope.project=angular.extend($scope.project,data)})};$scope.uploadTempReferenceFile=function($files){for(var i=0;i<$files.length;i++){var file=$files[i];performUploadTempReferenceFile(file,i,$files)}};var performUploadTempReferenceFile=function(file,i,$files){$scope.upload=$upload.upload({url:"projects/uploads/referenceFile/temp",data:{project:$scope.project},file:file}).progress(function(evt){$scope.uploadStatus=i+" of "+$files.length+" files uploaded",$scope.uploadfile=evt.config.file.name,$scope.uploadprogress=parseInt(100*evt.loaded/evt.total)}).success(function(data,status,headers,config){$scope.referenceFiles.push(data[0])})};$scope.delTempReferenceFile=function(idx){var file="/res/referenceFiles/temp/"+$scope.referenceFiles[idx].file.name;$http.post("/projects/deletefile",{fileLocation:file}),$scope.referenceFiles.splice(idx,1)},$scope.delReferenceFile=function(idx){if(confirm("Are you sure?")){var file="/res/referenceFiles/"+$scope.project._id+"/"+$scope.project.referenceFiles[idx].file.name;$http.post("/projects/deletefile",{fileLocation:file}),$scope.project.referenceFiles.splice(idx,1),$scope.update()}},$scope.delAudition=function(idx){if(confirm("Are you sure?")){$scope.loadAudio=0;var file="/res/auditions/"+$scope.project._id+"/"+$scope.project.auditions[idx].file.name;$http.post("/projects/deletefile",{fileLocation:file}),$scope.project.auditions.splice(idx,1),$scope.update()}},$scope.uploadAudition=function($files){$scope.loadAudio=0;for(var i=0;i<$files.length;i++){var file=$files[i];performUploadAudition(file,i,$files)}};var performUploadAudition=function(file,i,$files){$scope.upload=$upload.upload({url:"projects/uploads/audition",data:{project:$scope.project},file:file}).progress(function(evt){$scope.uploadStatus=i+" of "+$files.length+" files uploaded",$scope.uploadfile=evt.config.file.name,$scope.uploadprogress=parseInt(100*evt.loaded/evt.total)}).success(function(data,status,headers,config){$scope.project=angular.extend($scope.project,data)})}}]),angular.module("projects").factory("Projects",["$resource",function($resource){return $resource("projects-client/:projectId",{projectId:"@_id"},{update:{method:"PUT"}})}]),angular.module("projects").factory("Projects",["$resource",function($resource){return $resource("projects/:projectId",{projectId:"@_id"},{update:{method:"PUT"}})}]),angular.module("reports").run(["Menus",function(Menus){Menus.addMenuItem("topbar","Reports","reports","dropdown","/reports(/create)?",!1,["admin","producer/auditions director","talent director"]),Menus.addSubMenuItem("topbar","reports","Missing Auditions","reports/missing-auditions"),Menus.addSubMenuItem("topbar","reports","Auditions Booked","reports/auditions-booked")}]),angular.module("reports").config(["$stateProvider",function($stateProvider){$stateProvider.state("listReports",{url:"/reports",templateUrl:"modules/reports/views/list-reports.client.view.html"}).state("missingAuditionsReports",{url:"/reports/missing-auditions",templateUrl:"modules/reports/views/missing-auditions-reports.client.view.html"}).state("missingAuditionsBooked",{url:"/reports/auditions-booked",templateUrl:"modules/reports/views/auditions-booked.client.view.html"})}]),angular.module("reports").controller("ReportsController",["$scope","$stateParams","$location","Authentication","Reports","$http",function($scope,$stateParams,$location,Authentication,Reports,$http){$scope.authentication=Authentication,$scope.dateFilter="",$scope.findMissingAuditions=function(){$http.post("/reports/findMissingAuds",{dateFilter:$scope.dateFilter}).success(function(data,status,headers,config){$scope.missingAuditions=data})},$scope.findAuditionsBooked=function(){$scope.dateFilterStart&&$scope.dateFilterEnd?$http.post("/reports/findAuditionsBooked",{dateFilterStart:$scope.dateFilterStart,dateFilterEnd:$scope.dateFilterEnd}).success(function(data,status,headers,config){$scope.results=data}):alert("Please select a start and end date!")},$scope.convertToCSV=function(localDoc){$scope.dateFilterStart&&$scope.dateFilterEnd&&$http.post("/reports/convertToCSV",{jsonDoc:localDoc}).success(function(data,status,headers,config){var a=document.createElement("a");a.href="data:attachment/csv,"+escape(data),a.target="_blank",a.download="Auditions-Booked.csv",document.body.appendChild(a),a.click()})}}]),angular.module("reports").factory("Reports",["$resource",function($resource){return $resource("reports/:reportId",{reportId:"@_id"},{update:{method:"PUT"}})}]),angular.module("talents").run(["Menus","Authentication",function(Menus,Authentication){Menus.addMenuItem("topbar","Talent","talents","dropdown","/talents(/create)?",!1,["admin","producer/auditions director","talent director"]),Menus.addSubMenuItem("topbar","talents","List Talent","talents",!1,!1,["admin","producer/auditions director","talent director"]),Menus.addSubMenuItem("topbar","talents","New Talent","talents/create",!1,!1,["admin","talent director"])}]),angular.module("talents").config(["$stateProvider",function($stateProvider){$stateProvider.state("listTalents",{url:"/talents",templateUrl:"modules/talents/views/list-talents.client.view.html"}).state("createTalent",{url:"/talents/create",templateUrl:"modules/talents/views/create-talent.client.view.html"}).state("viewTalent",{url:"/talents/:talentId",templateUrl:"modules/talents/views/view-talent.client.view.html"}).state("editTalent",{url:"/talents/:talentId/edit",templateUrl:"modules/talents/views/edit-talent.client.view.html"})}]),angular.module("talents").controller("TalentsModalController",["$scope","$stateParams","$location","Authentication","Talents","$http","$modalInstance","$rootScope",function($scope,$stateParams,$location,Authentication,Talents,$http,$modalInstance,$rootScope){$scope.authentication=Authentication,$scope.typeOptions=["Email","Phone"],$scope.unionOptions=["union","non-union"],$scope.locations=["Offsite","Las Vegas","New York","Richmond","Santa Monica","Virginia Beach","Washington DC"],$scope.exclusivityOpts=["Non-Union Exclusive","Union","Non-Union Exclusive and Union","Foreign Language Agreement Non-Union","Foreign Language Agreement Union","Foreign Language Agreement Non-Union and Union","ISDN Non-Union","ISDN Union","ISDN Non-Union and Union","Independent Contractor Agreement Non-Union","Independent Contractor Agreement Union","Independent Contractor Agreement Non-Union and Union"],$scope.unionJoinedOpts=["SAG/AFTRA","OTHER"],$scope.unionSelected=[],$scope.unionJoinSelected=[],$scope.typeSelected=[],$scope.selTypecasts=[],$scope.projectTalentIdx=[],$scope.talentStatus=["Cast","Emailed","Scheduled","Message left","Out","Received needs to be posted","Posted","Not Posted (Bad Read)"],$scope.archived=!1,$scope.toggleUnion=function(union){var idx=$scope.talent.unionStatus.indexOf(union);idx>-1?$scope.talent.unionStatus.splice(idx,1):$scope.talent.unionStatus.push(union)},$scope.toggleUnionJoin=function(union){var idx=$scope.talent.unionJoined.indexOf(union);idx>-1?$scope.talent.unionJoined.splice(idx,1):$scope.talent.unionJoined.push(union)},$scope.toggleType=function(type){var idx=$scope.talent.type.indexOf(type);idx>-1?$scope.talent.type.splice(idx,1):$scope.talent.type.push(type)},$scope.toggleTypecast=function(typeCast){var idx=$scope.talent.typeCasts.indexOf(typeCast);idx>-1?$scope.talent.typeCasts.splice(idx,1):$scope.talent.typeCasts.push(typeCast)},$scope.toggleNewUnion=function(union){var idx=$scope.unionSelected.indexOf(union);idx>-1?$scope.unionSelected.splice(idx,1):$scope.unionSelected.push(union)},$scope.toggleNewUnionJoin=function(union){var idx=$scope.unionJoinSelected.indexOf(union);idx>-1?$scope.unionJoinSelected.splice(idx,1):$scope.unionJoinSelected.push(union)},$scope.toggleNewType=function(type){var idx=$scope.typeSelected.indexOf(type);idx>-1?$scope.typeSelected.splice(idx,1):$scope.typeSelected.push(type)},$scope.toggleNewTypecast=function(typeCast){var idx=$scope.selTypecasts.indexOf(typeCast);idx>-1?$scope.selTypecasts.splice(idx,1):$scope.selTypecasts.push(typeCast)},$scope.checkUnionStatus=function(unionVals){if("object"==typeof unionVals)for(var i=0;i<unionVals.length;++i)if("union"===unionVals[i])return!0;return!1},$scope.cancel=function(){$modalInstance.dismiss("cancel")},$scope.create=function(){var talent=new Talents({name:this.name,lastName:this.lastName,email:this.email,email2:this.email2,phone:this.phone,phone2:this.phone2,type:this.typeSelected,gender:this.gender,ageRange:this.ageRange,company:this.company,unionStatus:this.unionSelected,lastNameCode:this.lastNameCode,outageTimes:this.outageTimes,locationISDN:this.locationISDN,ISDNLine1:this.ISDNLine1,ISDNLine2:this.ISDNLine2,sourceConnectUsername:this.sourceConnectUsername,typeCasts:this.selTypecasts,exclusivity:this.exclusivity,parentName:this.parentName,producerOptional:this.producerOptional,unionJoined:this.unionJoinSelected});talent.$save(function(response){$rootScope.$broadcast("refreshTalent"),$modalInstance.close()},function(errorResponse){$scope.error=errorResponse.data.message})}}]),angular.module("talents").controller("TalentsController",["$scope","$stateParams","$location","Authentication","Talents","$http","$rootScope","Socket",function($scope,$stateParams,$location,Authentication,Talents,$http,$rootScope,Socket){$scope.authentication=Authentication,$scope.typeOptions=["Email","Phone"],$scope.unionOptions=["union","non-union"],$scope.locations=["Offsite","Las Vegas","New York","Richmond","Santa Monica","Virginia Beach","Washington DC"],$scope.exclusivityOpts=["Non-Union Exclusive","Union","Non-Union Exclusive and Union","Foreign Language Agreement Non-Union","Foreign Language Agreement Union","Foreign Language Agreement Non-Union and Union","ISDN Non-Union","ISDN Union","ISDN Non-Union and Union","Independent Contractor Agreement Non-Union","Independent Contractor Agreement Union","Independent Contractor Agreement Non-Union and Union"],$scope.unionJoinedOpts=["SAG/AFTRA","OTHER"],$scope.unionSelected=[],$scope.unionJoinSelected=[],$scope.typeSelected="Email",$scope.selTypecasts=[],$scope.projectTalentIdx=[],$scope.talentStatus=["Cast","Emailed","Scheduled","Message left","Out","Received needs to be posted","Posted","Not Posted (Bad Read)"],$scope.archived=!1,$scope.startsWith=function(actual,expected){var lowerStr=(actual+"").toLowerCase();return 0===lowerStr.indexOf(expected.toLowerCase())},$scope.Math=window.Math,$scope.currentPage=0,$scope.range=function(min,max,step){step=step||1;for(var input=[],i=min;max>=i;i+=step)input.push(i);return input},$scope.setPage=function(){$scope.currentPage=this.n},$scope.permitAdminDirector=function(){for(var allowRoles=["admin","talent director"],i=0;i<Authentication.user.roles.length;++i)for(var j=0;j<allowRoles.length;++j)if(Authentication.user.roles[i]===allowRoles[j])return!0},$scope.toggleUnion=function(union){var idx=$scope.talent.unionStatus.indexOf(union);idx>-1?$scope.talent.unionStatus.splice(idx,1):$scope.talent.unionStatus.push(union)},$scope.toggleUnionJoin=function(union){var idx=$scope.talent.unionJoined.indexOf(union);idx>-1?$scope.talent.unionJoined.splice(idx,1):$scope.talent.unionJoined.push(union)},$scope.toggleTypecast=function(typeCast){var idx=$scope.talent.typeCasts.indexOf(typeCast);idx>-1?$scope.talent.typeCasts.splice(idx,1):$scope.talent.typeCasts.push(typeCast)},$scope.toggleNewUnion=function(union){var idx=$scope.unionSelected.indexOf(union);idx>-1?$scope.unionSelected.splice(idx,1):$scope.unionSelected.push(union)},$scope.toggleNewUnionJoin=function(union){var idx=$scope.unionJoinSelected.indexOf(union);idx>-1?$scope.unionJoinSelected.splice(idx,1):$scope.unionJoinSelected.push(union)},$scope.toggleNewTypecast=function(typeCast){var idx=$scope.selTypecasts.indexOf(typeCast);idx>-1?$scope.selTypecasts.splice(idx,1):$scope.selTypecasts.push(typeCast)},$scope.checkUnionStatus=function(unionVals){if("object"==typeof unionVals)for(var i=0;i<unionVals.length;++i)if("union"===unionVals[i])return!0;return!1},$scope.create=function(){var talent=new Talents({name:this.name,lastName:this.lastName,email:this.email,email2:this.email2,phone:this.phone,phone2:this.phone2,type:this.typeSelected,gender:this.gender,ageRange:this.ageRange,company:this.company,unionStatus:this.unionSelected,lastNameCode:this.lastNameCode,outageTimes:this.outageTimes,locationISDN:this.locationISDN,ISDNLine1:this.ISDNLine1,ISDNLine2:this.ISDNLine2,sourceConnectUsername:this.sourceConnectUsername,typeCasts:this.selTypecasts,exclusivity:this.exclusivity,parentName:this.parentName,producerOptional:this.producerOptional,unionJoined:this.unionJoinSelected});talent.$save(function(response){$location.path("talents/"+response._id),$scope.name=""},function(errorResponse){$scope.error=errorResponse.data.message})},$scope.remove=function(talent){if(confirm("Are you sure?"))if(talent){talent.$remove();for(var i in $scope.talents)$scope.talents[i]===talent&&$scope.talents.splice(i,1)}else $scope.talent.$remove(function(){$location.path("talents")})},$scope.update=function(){var talent=$scope.talent;talent.$update(function(){$location.path("talents/"+talent._id)},function(errorResponse){$scope.error=errorResponse.data.message})},$scope.find=function(){$scope.talents=Talents.query()},Socket.on("talentsListUpdate",function(){$scope.find()}),$scope.findOne=function(){$scope.talent=Talents.get({talentId:$stateParams.talentId})},$rootScope.$on("refreshTalent",$scope.find()),$scope.findTalentProjects=function(){$scope.$watch("talent._id",function(val){$http.post("/projects/filterByTalent",{talentId:$scope.talent._id,archived:$scope.archived}).success(function(data,status,headers,config){$scope.projects=data;for(var i=0;i<data.length;++i)for(var j=0;j<data[i].talent.length;++j)data[i].talent[j].talentId===$scope.talent._id&&($scope.projectTalentIdx[i]=j)})})},$scope.sendTalentEmail=function(talent,project){$http.get("/projects/"+project._id,{}).success(function(data,status,headers,config){$http.post("/projects/sendtalentemail",{talent:talent,project:data}).success(function(data,status,headers,config){alert("Selected talent has been emailed."),$http.post("/projects/filterByTalent",{talentId:$scope.talent._id,archived:$scope.archived}).success(function(data,status,headers,config){$scope.projects=data})})})},$scope.updateTalentStatus=function(project,talentId){$http.get("/projects/"+project._id,{}).success(function(data,status,headers,config){data.talent[talentId].status=project.talent[talentId].status,$http.post("/projects/updatetalentstatus",{project:data}).success(function(data,status,headers,config){$http.post("/projects/filterByTalent",{talentId:$scope.talent._id,archived:$scope.archived}).success(function(data,status,headers,config){$scope.projects=data})})})},$scope.getOne=function(talentId){$scope.talent=Talents.get({talentId:talentId})}}]),angular.module("talents").filter("tel",function(){return function(tel){if(!tel)return"";var value=tel.toString().trim().replace(/^\+/,"");if(value.match(/[^0-9]/))return tel;var country,city,number;switch(value.length){case 10:country=1,city=value.slice(0,3),number=value.slice(3);break;case 11:country=value[0],city=value.slice(1,4),number=value.slice(4);break;case 12:country=value.slice(0,3),city=value.slice(3,5),number=value.slice(5);break;default:return tel}return 1===country&&(country=""),number=number.slice(0,3)+"-"+number.slice(3),((""!==country?country+"-":"")+city+"-"+number).trim()}}),angular.module("talents").factory("Talents",["$resource",function($resource){return $resource("talents/:talentId",{talentId:"@_id"},{update:{method:"PUT"}})}]),angular.module("tools").run(["Menus",function(Menus){Menus.addMenuItem("topbar","Tools","tools","dropdown","/tools(/create)?",!1,["admin","producer/auditions director","production coordinator"]),Menus.addSubMenuItem("topbar","tools","Call List","tools/call-list"),Menus.addSubMenuItem("topbar","tools","Email Talent","tools/email-talent"),Menus.addSubMenuItem("topbar","tools","Backup/Restore","tools/backup-restore"),Menus.addSubMenuItem("topbar","tools","Delete Projects","tools/delete-projects"),Menus.addSubMenuItem("topbar","tools","Talent Import","tools/talent-import")}]),angular.module("tools").config(["$stateProvider",function($stateProvider){$stateProvider.state("listTools",{url:"/tools",templateUrl:"modules/tools/views/list-tools.client.view.html"}).state("talentEmailTool",{url:"/tools/email-talent",templateUrl:"modules/tools/views/email-talent-tool.client.view.html"}).state("talentCallList",{url:"/tools/call-list",templateUrl:"modules/tools/views/call-list.client.view.html"}).state("toolDeleteProjects",{url:"/tools/delete-projects",templateUrl:"modules/tools/views/delete-projects.client.view.html"}).state("toolBackupProjects",{url:"/tools/backup-restore",templateUrl:"modules/tools/views/backup-projects.client.view.html"}).state("toolTalentImport",{url:"/tools/talent-import",templateUrl:"modules/tools/views/talent-import.client.view.html"})}]),angular.module("tools").controller("ToolsController",["$scope","$stateParams","$location","Authentication","Tools","Talents","$http","Socket","Projects","$upload",function($scope,$stateParams,$location,Authentication,Tools,Talents,$http,Socket,Projects,$upload){$scope.authentication=Authentication,$scope.failed=[],$scope.alerts=[],$scope.verifySelected=[],$scope.rejFiles=[],$scope.files=[],$scope.emailClients=[],$scope.talents=[],$scope.email={all:"",subject:"",body:""},$scope.locations=["Offsite","Las Vegas","New York","Richmond","Santa Monica","Virginia Beach","Washington DC"],$scope.talentStatus=["Cast","Emailed","Scheduled","Message left","Out","Received needs to be posted","Posted","Not Posted (Bad Read)"],$scope.callTalents=[],$scope.messagedTalents=[],$scope.alreadyScheduledTalents=[],$scope.selectAll="",$scope.projects=[],$scope.projectsList=[],$scope.google={spreadsheetkey:"",username:"",password:""},$scope.closeAlert=function(index){$scope.alerts.splice(index,1)},$scope.Math=window.Math,$scope.currentPage=0,$scope.range=function(min,max,step){step=step||1;for(var input=[],i=min;max>=i;i+=step)input.push(i);return input},$scope.setPage=function(){$scope.currentPage=this.n},$scope.toggleEmailer=function(id,talent){var idx=$scope.emailClients.indexOf(id);idx>-1?$scope.emailClients.splice(idx,1):$scope.emailClients.push(id)},$scope.checkToggleEmail=function(talentId){var idx=$scope.emailClients.indexOf(talentId);return idx>-1?!0:!1},$scope.gatherTalents=function(){$scope.talents=Talents.query()},$scope.talentLookup=function(id){for(var i=0;i<$scope.talents.length;++i)if($scope.talents[i]._id===id)return $scope.talents[i].name+" "+$scope.talents[i].lastName},$scope.toggleEmailTalentList=function(talent){var idx=$scope.verifySelected.indexOf(talent);idx>-1?$scope.verifySelected.splice(idx,1):$scope.verifySelected.push(talent)},$scope.emailTalentListChk=function(talent){for(var i=0;i<$scope.verifySelected.length;++i)if(String($scope.verifySelected[i])===String(talent))return!0},$scope.removeSelectedTalents=function(){for(var idx,i=0;i<$scope.verifySelected.length;++i)for(var j=0;j<$scope.emailClients.length;++j)String($scope.verifySelected[i])===String($scope.emailClients[j])&&(idx=$scope.emailClients.indexOf($scope.emailClients[j]),idx>-1&&$scope.emailClients.splice(idx,1),idx=$scope.verifySelected.indexOf($scope.emailClients[j]),idx>-1&&$scope.verifySelected.splice(idx,1))},$scope.sendTalentEmails=function(){var conf=confirm("Are you sure you would like to send the entered email information to your selected talent?");conf===!0&&(""!==$scope.email.subject&&""!==$scope.email.body?$http.post("/tools/sendtalentemails",{email:$scope.email,emailClients:$scope.emailClients}).success(function(data,status,headers,config){alert("Talent has been emailed!")}):alert("Email subject and message cannot be empty!"))},Socket.on("callListUpdate",function(talentsData){switch(talentsData.filter){case"Cast":$scope.callProjects=talentsData.talents;break;case"Message left":$scope.messagedTalents=talentsData.talents;break;case"Scheduled":$scope.alreadyScheduledTalents=talentsData.talents;break;default:$scope.gatherTalentsToCall(),$scope.gatherTalentsMessagesLeft(),$scope.gatherTalentsAlreadyScheduled()}}),$scope.talentLookupData=function(id){for(var i=0;i<$scope.talents.length;++i)if(String($scope.talents[i]._id)===String(id))return $scope.talents[i]},$scope.gatherTalentsToCall=function(){$http.post("/tools/gatherTalentsToCall").success(function(data,status,headers,config){$scope.callProjects=data})},$scope.gatherTalentsMessagesLeft=function(){$http.post("/tools/gatherTalentsMessagesLeft").success(function(data,status,headers,config){$scope.messagedTalents=data})},$scope.gatherTalentsAlreadyScheduled=function(){$http.post("/tools/gatherTalentsAlreadyScheduled").success(function(data,status,headers,config){$scope.alreadyScheduledTalents=data})},$scope.emailCallListTalent=function(talent,projectId){$http.post("/projects/sendTalentEmailById",{talent:talent,projectId:projectId}).success(function(data,status,headers,config){alert("Selected talent has been emailed."),$scope.gatherTalentsToCall(),$scope.gatherTalentsMessagesLeft(),$scope.gatherTalentsAlreadyScheduled()})},$scope.updateStatus=function(talentId,projectId,status){$http.post("/projects/updateSingleTalentStatus",{talentId:talentId,talentStatus:status,projectId:projectId}).success(function(data,status,headers,config){$scope.gatherTalentsToCall(),$scope.gatherTalentsMessagesLeft(),$scope.gatherTalentsAlreadyScheduled()})},$scope.findProjects=function(){$scope.projects=Projects.query()},$scope.toggleProject=function(id){var idx=$scope.projectsList.indexOf(id);idx>-1?$scope.projectsList.splice(idx,1):$scope.projectsList.push(id)},$scope.checkToggleProject=function(projectId){var idx=$scope.projectsList.indexOf(projectId);return idx>-1?!0:!1},$scope.selectAllProjects=function(){if($scope.projectsList=[],$scope.selectAll===!0)for(var i=0;i<$scope.projects.length;++i)$scope.projectsList.push($scope.projects[i]._id)},$scope.deleteProjects=function(){var i;if($scope.projectsList.length>0){var con=confirm("Are you sure?");if(con===!0){var concon=confirm("Are you sure you're sure?");if(concon===!0)for(i=0;i<$scope.projectsList.length;++i)performDeleteProject(i)}}else alert("You must first select some projects!")};var performDeleteProject=function(i){$http.post("/projects/deleteProjectById",{projectId:$scope.projectsList[i]}).success(function(data,status,headers,config){$scope.projects=Projects.query()})};$scope.backupProjects=function(){if($scope.projectsList.length>0){var con=confirm("Are you sure?");con===!0&&$http.post("/projects/backupProjectsById",{projectList:$scope.projectsList}).success(function(data,status,headers,config){setTimeout(function(){var link=document.createElement("a");link.download=data.zippedFilename,link.href="res/archives/"+encodeURIComponent(data.zippedFilename),link.click()},1e3)})}else alert("You must first select some projects!")},$scope.uploadBackupFile=function($files){for(var i=0;i<$files.length;i++){var file=$files[i];performUploadBackupFile(file,i,$files)}};var performUploadBackupFile=function(file,i,$files){$scope.upload=$upload.upload({url:"projects/uploadBackup",data:{},file:file}).progress(function(evt){$scope.uploadStatus=i+" of "+$files.length+" files uploaded",$scope.uploadfile=evt.config.file.name,$scope.uploadprogress=parseInt(100*evt.loaded/evt.total)}).success(function(data,status,headers,config){})};$scope.uploadTalentFile=function($files){for(var i=0;i<$files.length;i++){var file=$files[i];performUploadTalentFile(file,i,$files)}};var performUploadTalentFile=function(file,i,$files){$scope.upload=$upload.upload({url:"tools/uploadTalentCSV",data:{},file:file}).progress(function(evt){$scope.uploadStatus=i+" of "+$files.length+" files uploaded",$scope.uploadfile=evt.config.file.name,$scope.uploadprogress=parseInt(100*evt.loaded/evt.total)}).success(function(data,status,headers,config){$scope.failed=data.failed,$scope.alerts.push({type:data.status,msg:"Updated talents "+data.updatedTalents+" - New talents "+data.newTalents+" - Failed talents "+data.failed.length})})};$scope.processGoogleSheet=function(){$scope.alerts=[],""!==$scope.google.spreadsheetkey?$http.post("/tools/processGoogleSheet",{google:$scope.google}).success(function(data,status,headers,config){$scope.alerts.push({type:"success",msg:"All talents have been imported into the database."})}):$scope.alerts.push({type:"danger",msg:"Pelase make sure that you have populated the field!"})}}]),angular.module("tools").factory("Tools",["$resource",function($resource){return $resource("tools/:toolId",{toolId:"@_id"},{update:{method:"PUT"}})}]),angular.module("typecasts").run(["Menus","Authentication",function(Menus,Authentication){Menus.addSubMenuItem("topbar","talents","List Typecasts","typecasts",!1,!1,["admin","talent director"]),Menus.addSubMenuItem("topbar","talents","New Typecast","typecasts/create",!1,!1,["admin","talent director"])}]),angular.module("typecasts").config(["$stateProvider",function($stateProvider){$stateProvider.state("listTypecasts",{url:"/typecasts",templateUrl:"modules/typecasts/views/list-typecasts.client.view.html"}).state("createTypecast",{url:"/typecasts/create",templateUrl:"modules/typecasts/views/create-typecast.client.view.html"}).state("viewTypecast",{url:"/typecasts/:typecastId",templateUrl:"modules/typecasts/views/view-typecast.client.view.html"}).state("editTypecast",{url:"/typecasts/:typecastId/edit",templateUrl:"modules/typecasts/views/edit-typecast.client.view.html"})}]),angular.module("typecasts").controller("TypecastsController",["$scope","$stateParams","$location","Authentication","Typecasts","Socket",function($scope,$stateParams,$location,Authentication,Typecasts,Socket){$scope.authentication=Authentication,$scope.Math=window.Math,$scope.currentPage=0,$scope.range=function(min,max,step){step=step||1;for(var input=[],i=min;max>=i;i+=step)input.push(i);return input},$scope.setPage=function(){$scope.currentPage=this.n},$scope.permitAdminDirector=function(){for(var allowRoles=["admin","producer/auditions director","talent director"],i=0;i<Authentication.user.roles.length;++i)for(var j=0;j<allowRoles.length;++j)if(Authentication.user.roles[i]===allowRoles[j])return!0},$scope.create=function(){var typecast=new Typecasts({name:this.name});typecast.$save(function(response){$location.path("typecasts/"+response._id),$scope.name=""},function(errorResponse){$scope.error=errorResponse.data.message})},$scope.remove=function(typecast){if(confirm("Are you sure?"))if(typecast){typecast.$remove();
for(var i in $scope.typecasts)$scope.typecasts[i]===typecast&&$scope.typecasts.splice(i,1)}else $scope.typecast.$remove(function(){$location.path("typecasts")})},$scope.update=function(){var typecast=$scope.typecast;typecast.$update(function(){$location.path("typecasts/"+typecast._id)},function(errorResponse){$scope.error=errorResponse.data.message})},$scope.find=function(){$scope.typecasts=Typecasts.query()},Socket.on("typecastsListUpdate",function(){$scope.find()}),$scope.findOne=function(){$scope.typecast=Typecasts.get({typecastId:$stateParams.typecastId})}}]),angular.module("typecasts").factory("Typecasts",["$resource",function($resource){return $resource("typecasts/:typecastId",{typecastId:"@_id"},{update:{method:"PUT"}})}]),angular.module("users").config(["$httpProvider",function($httpProvider){$httpProvider.interceptors.push(["$q","$location","Authentication",function($q,$location,Authentication){return{responseError:function(rejection){switch(rejection.status){case 401:Authentication.user=null,$location.path("signin");break;case 403:}return $q.reject(rejection)}}}])}]),angular.module("users").run(["Menus","Authentication",function(Menus,Authentication){Menus.addMenuItem("topbar","Users","users","dropdown","/usersedit(/create)?",!1,["admin","producer/auditions director"]),Menus.addSubMenuItem("topbar","users","List Users","usersedit",!1,!1,["admin","producer/auditions director"]),Menus.addSubMenuItem("topbar","users","Create New User","usersedit/create",!1,!1,["admin"])}]),angular.module("users").config(["$stateProvider",function($stateProvider){$stateProvider.state("profile",{url:"/settings/profile",templateUrl:"modules/users/views/settings/edit-profile.client.view.html"}).state("password",{url:"/settings/password",templateUrl:"modules/users/views/settings/change-password.client.view.html"}).state("accounts",{url:"/settings/accounts",templateUrl:"modules/users/views/settings/social-accounts.client.view.html"}).state("signup",{url:"/signup",templateUrl:"modules/users/views/authentication/signup.client.view.html"}).state("signin",{url:"/signin",templateUrl:"modules/users/views/authentication/signin.client.view.html"}).state("forgot",{url:"/password/forgot",templateUrl:"modules/users/views/password/forgot-password.client.view.html"}).state("reset-invlaid",{url:"/password/reset/invalid",templateUrl:"modules/users/views/password/reset-password-invalid.client.view.html"}).state("reset-success",{url:"/password/reset/success",templateUrl:"modules/users/views/password/reset-password-success.client.view.html"}).state("reset",{url:"/password/reset/:token",templateUrl:"modules/users/views/password/reset-password.client.view.html"}).state("users",{url:"/usersedit",templateUrl:"modules/users/views/list-users.client.view.html"}).state("newUser",{url:"/usersedit/create",templateUrl:"modules/users/views/create.client.view.html"}).state("viewUser",{url:"/usersedit/:userIdEdit",templateUrl:"modules/users/views/view-user.client.view.html"}).state("editUser",{url:"/usersedit/:userIdEdit/edit",templateUrl:"modules/users/views/edit-user.client.view.html"})}]),angular.module("users").controller("AuthenticationController",["$scope","$http","$location","Authentication",function($scope,$http,$location,Authentication){$scope.authentication=Authentication,$scope.authentication.user&&$location.path("/"),$scope.signup=function(){$http.post("/auth/signup",$scope.credentials).success(function(response){$scope.authentication.user=response,$location.path("/")}).error(function(response){$scope.error=response.message})},$scope.signin=function(){$http.post("/auth/signin",$scope.credentials).success(function(response){$scope.authentication.user=response,"admin"===$scope.authentication.user.roles[0]||"producer/auditions director"===$scope.authentication.user.roles[0]?$location.path("/projects"):"client"===$scope.authentication.user.roles[0]||"client-client"===$scope.authentication.user.roles[0]?$location.path("/projects-client"):$location.path("/")}).error(function(response){$scope.error=response.message})}}]),angular.module("users").controller("PasswordController",["$scope","$stateParams","$http","$location","Authentication",function($scope,$stateParams,$http,$location,Authentication){$scope.authentication=Authentication,$scope.authentication.user&&$location.path("/"),$scope.askForPasswordReset=function(){$scope.success=$scope.error=null,$http.post("/auth/forgot",$scope.credentials).success(function(response){$scope.credentials=null,$scope.success=response.message}).error(function(response){$scope.credentials=null,$scope.error=response.message})},$scope.resetUserPassword=function(){$scope.success=$scope.error=null,$http.post("/auth/reset/"+$stateParams.token,$scope.passwordDetails).success(function(response){$scope.passwordDetails=null,Authentication.user=response,$location.path("/password/reset/success")}).error(function(response){$scope.error=response.message})}}]),angular.module("users").controller("SettingsController",["$scope","$http","$location","Users","Authentication",function($scope,$http,$location,Users,Authentication){$scope.user=Authentication.user,$scope.roleOpts=["user","admin","producer/auditions director","talent","talent director","client","agency"],$scope.user||$location.path("/"),$scope.hasConnectedAdditionalSocialAccounts=function(provider){for(var i in $scope.user.additionalProvidersData)return!0;return!1},$scope.isConnectedSocialAccount=function(provider){return $scope.user.provider===provider||$scope.user.additionalProvidersData&&$scope.user.additionalProvidersData[provider]},$scope.removeUserSocialAccount=function(provider){$scope.success=$scope.error=null,$http["delete"]("/users/accounts",{params:{provider:provider}}).success(function(response){$scope.success=!0,$scope.user=Authentication.user=response}).error(function(response){$scope.error=response.message})},$scope.updateUserProfile=function(isValid){if(isValid){$scope.success=$scope.error=null;var user=new Users($scope.user);user.$update(function(response){$scope.success=!0,Authentication.user=response},function(response){$scope.error=response.data.message})}else $scope.submitted=!0},$scope.changeUserPassword=function(){$scope.success=$scope.error=null,$http.post("/users/password",$scope.passwordDetails).success(function(response){$scope.success=!0,$scope.passwordDetails=null}).error(function(response){$scope.error=response.message})}}]),angular.module("users").controller("UsersListController",["$scope","$stateParams","$location","Authentication","UsersEdit","UsersFind","$http","$rootScope",function($scope,$stateParams,$location,Authentication,UsersEdit,UsersFind,$http,$rootScope){$scope.authentication=Authentication,$scope.roleOpts=["client","client-client"],$scope.Math=window.Math,$scope.currentPage=0,$scope.range=function(min,max,step){step=step||1;for(var input=[],i=min;max>=i;i+=step)input.push(i);return input},$scope.setPage=function(){$scope.currentPage=this.n},$scope.find=function(){$scope.users=UsersEdit.query()},$scope.findFilter=function(selUserLevel){$scope.users=UsersFind.query({userLevel:selUserLevel})},$rootScope.$on("refresh",$scope.find()),$rootScope.$on("refreshListFilter",function(event,args){$scope.findFilter(args)}),$scope.findOne=function(){$scope.useredit=UsersEdit.get({userIdEdit:$stateParams.userIdEdit})}}]),angular.module("users").controller("UsersModalController",["$scope","$stateParams","$location","Authentication","UsersEdit","UsersFind","$http","$modalInstance","$rootScope","owner",function($scope,$stateParams,$location,Authentication,UsersEdit,UsersFind,$http,$modalInstance,$rootScope,owner){$scope.authentication=Authentication,$scope.roleOpts=["client","client-client"],$scope.owner=owner,$scope.Math=window.Math,$scope.cancel=function(){$modalInstance.dismiss("cancel")},$scope.createModel=function(){var useredit={firstName:this.firstName,lastName:this.lastName,displayName:this.displayName,company:this.company,email:this.email,username:this.username,phone:this.phone,password:this.password,roles:this.roles};$http.post("/usersedit/create",useredit).success(function(data,status,headers,config){"client"===$scope.owner?$rootScope.$broadcast("refreshFilter","client"):$rootScope.$broadcast("refreshListFilter","client-client"),$modalInstance.close()}).error(function(response){$scope.error=response.message})}}]),angular.module("users").controller("UsersController",["$scope","$stateParams","$location","Authentication","UsersEdit","UsersFind","$http","$rootScope",function($scope,$stateParams,$location,Authentication,UsersEdit,UsersFind,$http,$rootScope){$scope.authentication=Authentication,$scope.roleOpts=["user","admin","producer/auditions director","production coordinator","talent director","client","client-client"],$scope.Math=window.Math,$scope.currentPage=0,$scope.range=function(min,max,step){step=step||1;for(var input=[],i=min;max>=i;i+=step)input.push(i);return input},$scope.setPage=function(){$scope.currentPage=this.n},$scope.find=function(){$scope.users=UsersEdit.query()},$scope.findFilter=function(selUserLevel){$scope.users=UsersFind.query({userLevel:selUserLevel})},$rootScope.$on("refresh",$scope.find()),$rootScope.$on("refreshFilter",function(event,args){$scope.findFilter(args)}),$scope.findOne=function(){$scope.useredit=UsersEdit.get({userIdEdit:$stateParams.userIdEdit})},$scope.update=function(isValid){if(isValid){$scope.success=$scope.error=null;var user=new UsersEdit($scope.useredit);user.edited=Authentication,user.$update(function(response){$scope.success=!0,Authentication.user=response},function(response){$scope.error=response.data.message})}else $scope.submitted=!0},$scope.remove=function(useredit){if(confirm("Are you sure?"))if(useredit){useredit.$remove();for(var i in $scope.users)$scope.users[i]===useredit&&$scope.users.splice(i,1)}else $scope.useredit.$remove(function(){$location.path("usersedit")})},$scope.create=function(){var useredit={firstName:this.firstName,lastName:this.lastName,displayName:this.displayName,company:this.company,email:this.email,username:this.username,phone:this.phone,password:this.password,roles:this.roles};$http.post("/usersedit/create",useredit).success(function(data,status,headers,config){$location.path("/usersedit")}).error(function(response){$scope.error=response.message})}}]),angular.module("users").factory("Authentication",[function(){var _this=this;return _this._data={user:window.user},_this._data}]),angular.module("users").factory("Users",["$resource",function($resource){return $resource("users/:userId",{userId:"@_id"},{update:{method:"PUT"}})}]),angular.module("users").factory("UsersEdit",["$resource",function($resource){return $resource("usersedit/:userIdEdit",{userIdEdit:"@_id"},{update:{method:"PUT"}})}]),angular.module("users").factory("UsersFind",["$resource",function($resource){return $resource("usersfind/:userLevel",{userLevel:"@_id"},{update:{method:"PUT"}})}]);